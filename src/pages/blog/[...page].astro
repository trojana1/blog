---
import type { GetStaticPaths } from "astro";
import { getCollection } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import PostsList from "../../components/PostsList.astro";
import Icon from "../../components/Icon.astro";

export const getStaticPaths = (async ({ paginate }) => {
    const posts = await getCollection("posts");
    return paginate(posts, { pageSize: 4 });
}) satisfies GetStaticPaths;

const { page } = Astro.props;

const maxPagesAtOnce = 7;
let minPage = 0;
let maxPage = 0;
if (page.lastPage <= maxPagesAtOnce) {
    maxPage = page.lastPage;
} else {
    minPage = Math.max(0, page.currentPage - 4);
    maxPage = Math.min(page.lastPage, page.currentPage + 3);
}
---

<Layout title="Welcome to Astro.">
    <div class="prose prose-slate py-6 dark:prose-invert prose-h1:font-bold">
        <h1>Posts</h1>
    </div>
    <PostsList posts={page.data} />
    <div class="flex items-center justify-center pt-4">
        <a
            href={page.url.first ? `/blog${page.url.first}` : "javascript:void(0)"}
            class:list={[
                page.url.first
                    ? "fill-gray-700 stroke-gray-700 dark:fill-gray-300 dark:stroke-gray-300"
                    : "fill-gray-300 stroke-gray-300 dark:fill-gray-700 dark:stroke-gray-700",
                "p-3",
                "hover:fill-blue-300 hover:stroke-blue-300 dark:hover:fill-blue-500 dark:hover:stroke-blue-500",
            ]}
        >
            <Icon size={20} icon="chevrons-left" />
        </a>
        <a
            href={page.url.prev ? `/blog${page.url.prev}` : "javascript:void(0)"}
            class:list={[
                page.url.prev
                    ? "fill-gray-700 stroke-gray-700 dark:fill-gray-300 dark:stroke-gray-300"
                    : "fill-gray-300 stroke-gray-300 dark:fill-gray-700 dark:stroke-gray-700",
                "p-3",
                "hover:fill-blue-300 hover:stroke-blue-300 dark:hover:fill-blue-500 dark:hover:stroke-blue-500",
            ]}
        >
            <Icon size={20} icon="chevron-left" />
        </a>
        {
            [...Array(Math.min(maxPage - minPage, maxPagesAtOnce))].map((_, i) => {
                const idx = i + minPage;

                return (
                    <a
                        href={idx === 0 ? "/blog/blog" : `/blog/blog/${idx + 1}`}
                        class:list={[
                            idx + 1 === page.currentPage ? "text-blue-950 dark:text-blue-300" : "",
                            "p-3",
                            "hover:text-blue-300 dark:hover:text-blue-500",
                        ]}
                    >
                        {idx + 1}
                    </a>
                );
            })
        }
        <a
            href={page.url.next ? `/blog${page.url.next}` : "javascript:void(0)"}
            class:list={[
                page.url.next
                    ? "fill-gray-700 stroke-gray-700 dark:fill-gray-300 dark:stroke-gray-300"
                    : "fill-gray-300 stroke-gray-300 dark:fill-gray-700 dark:stroke-gray-700",
                "p-3",
                "hover:fill-blue-300 hover:stroke-blue-300 dark:hover:fill-blue-500 dark:hover:stroke-blue-500",
            ]}
        >
            <Icon size={20} icon="chevron-right" />
        </a>
        <a
            href={page.url.last ? `/blog${page.url.last}` : "javascript:void(0)"}
            class:list={[
                page.url.last
                    ? "fill-gray-700 stroke-gray-700 dark:fill-gray-300 dark:stroke-gray-300"
                    : "fill-gray-300 stroke-gray-300 dark:fill-gray-700 dark:stroke-gray-700",
                "p-3",
                "hover:fill-blue-300 hover:stroke-blue-300 dark:hover:fill-blue-500 dark:hover:stroke-blue-500",
            ]}
        >
            <Icon size={20} icon="chevrons-right" />
        </a>
    </div>
</Layout>
